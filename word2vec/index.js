'use strict';

const jsTokens = require("js-tokens");
const fs = require("fs");

const path = process.argv[2];
const num = process.argv[4];
let fp = fs.readFileSync(path, "utf8");
let keywords = process.argv[3].split(",");
for(const token of jsTokens(fp)){
    let str = token.type;
    if (str !== "WhiteSpace" && str !== "SingleLineComment" && str !== "MultiLineComment"){
        if(str === "Punctuator"){
            str = token.value;
        }else if(str === "IdentifierName" && keywords.includes(token.value)){
            str = token.value;
        } else if(str ==="NumericLiteral"){
            let temp = parseInt(token.value);
            if(temp == 1 || temp == 0 || temp == -1){
                str = token.value;
            }
        } else if(str ==="StringLiteral"){
            if(token.value.includes("<") || token.value.includes(">")){
                str = "HTMLStringLiteral"
            } else if(token.value.toLowerCase().includes("select") || token.value.toLowerCase().includes("from") || token.value.toLowerCase().includes("where") || token.value.toLowerCase().includes("update") || token.value.toLowerCase().includes("join") || token.value.toLowerCase().includes("limit") || token.value.toLowerCase().includes("create") || token.value.toLowerCase().includes("having") || token.value.toLowerCase().includes("order by") || token.value.toLowerCase().includes("alter")){
                str = "SQLStringLiteral"
            } else{
                let specialList = ["HTTPS","HTTP", "GET", "POST", "Port"];
                for(let element of specialList){
                    let regex = new RegExp(".*" + element + ".*", "i");
                    if(regex.test(token.value)){
                        str = element + "StringLiteral"
                        break;
                    }
                }
            }
        }
        if(str === "LineTerminatorSequence"){
            str = "\n"
        } else{
            str += " ";
        }
        fs.appendFileSync("temp_corp/corpus"+num+".txt", str, (err) => {
            if (err){ 
                throw err;
            }
        });
    }
}

fs.appendFileSync("temp_corp/corpus"+num+".txt", "\n", (err) => {
    if (err){
        throw err;
    }
});
